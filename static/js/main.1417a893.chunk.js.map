{"version":3,"sources":["components/ColumnFilter.jsx","components/Columns.js","components/FilteringTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["ColumnFilter","column","filterValue","setFilter","style","borderRadius","outline","placeholder","value","onChange","e","target","COLUMNS","Header","Footer","accessor","Filter","FilteringTable","useState","data","setData","URL_ENDPOINT","useEffect","fetch","then","res","json","columns","useMemo","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","Navbar","bg","expand","responsive","sticky","color","Table","striped","bordered","hover","size","variant","className","condensed","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canFilter","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1417a893.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column\r\n\r\n  const inputStyle = {\r\n    borderRadius:'5px',\r\n    '&:focus': {\r\n      outline: 'none'\r\n    }\r\n}\r\n  return (\r\n    <input\r\n        style={inputStyle}\r\n        placeholder=\"Search\"\r\n        value={filterValue || ''}\r\n        onChange={e => setFilter(e.target.value)}>\r\n    </input>\r\n  )\r\n}\r\n\r\n","import {ColumnFilter} from './ColumnFilter.jsx'\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'Id',\r\n        Footer: 'Id',\r\n        accessor: 'id',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header: 'Project',\r\n        Footer: 'Project',\r\n        accessor:'project',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Course',\r\n        Footer: 'Course',\r\n        accessor:'course',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Person',\r\n        Footer: 'Person',\r\n        accessor:'person',\r\n        Filter: ColumnFilter\r\n        \r\n    },\r\n    {\r\n        Header:'Email',\r\n        Footer: 'Email',\r\n        accessor:'email',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Department',\r\n        Footer:'Department',\r\n        accessor:'department',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Location',\r\n        Footer: 'Location',\r\n        accessor:'location',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Course Started Date',\r\n        Footer: 'Course Started Date',\r\n        accessor:'courseStartedDate',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Opened Lessons Count',\r\n        Footer: 'Opened Lessons Count',\r\n        accessor:'openedLessonsCount',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Completed Date',\r\n        Footer: 'Completed Date',\r\n        accessor:'completedDate',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Completed Lessons Count',\r\n        Footer: 'Completed Lessons Count',\r\n        accessor:'completedLessonsCount',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Total Lessons Count',\r\n        Footer: 'Total Lessons Count',\r\n        accessor:'totalLessonsCount',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Have Not Started',\r\n        Footer: 'Have Not Started',\r\n        accessor:'haveNotStarted',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Not On Schedule',\r\n        Footer: 'Not On Schedule',\r\n        accessor:'notOnSchedule',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Have Started',\r\n        Footer: 'Have Started',\r\n        accessor:'haveStarted',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Quiz Score',\r\n        Footer: 'Quiz Score',\r\n        accessor:'quizScore',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Quiz Score Total',\r\n        Footer: 'Quiz Score Total',\r\n        accessor:'quizScoreTotal',\r\n        Filter: ColumnFilter\r\n    },\r\n    {\r\n        Header:'Certificate Title',\r\n        Footer: 'Certificate Title',\r\n        accessor:'certificateTitle',\r\n        Filter: ColumnFilter\r\n    },\r\n]\r\n\r\n ","import React , {useEffect, useState, useMemo }from 'react'\r\nimport { useTable, useFilters, useGlobalFilter ,useSortBy} from 'react-table'\r\nimport { COLUMNS } from './Columns'\r\nimport { FaSortAmountUp, FaSortAmountDown } from 'react-icons/fa'\r\nimport {Navbar,Table } from 'react-bootstrap'\r\n\r\n\r\nexport const FilteringTable = () =>{\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const API_KEY = 'i34nvn324gdfg5'\r\n    const URL_ENDPOINT = `https://xtramile.azure-api.net/stats/lukaszcoding?apiSecret=${API_KEY}`\r\n  \r\n    useEffect(() =>{\r\n        fetch(URL_ENDPOINT)\r\n        .then((res) => res.json())\r\n        .then((json) => setData(json))\r\n      }, [URL_ENDPOINT])\r\n    \r\n    const columns = useMemo(() => COLUMNS, [])\r\n\r\n    const \r\n        { \r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups, \r\n            footerGroups, \r\n            rows,\r\n            prepareRow \r\n        } = useTable(\r\n        {\r\n         columns,\r\n         data\r\n        },\r\n            useFilters,\r\n            useGlobalFilter,\r\n            useSortBy\r\n        )\r\n    const titleStyle = {\r\n            color: '#eee',            \r\n        }\r\n\r\n    return (\r\n        <>\r\n        <Navbar \r\n           bg=\"dark\" \r\n           expand=\"lg\"\r\n           responsive\r\n           sticky=\"top\"\r\n           >  \r\n             <h2 style={titleStyle}>XtraMile React Front-End Assignment</h2>\r\n           </Navbar>\r\n            <Table \r\n                striped \r\n                bordered \r\n                hover \r\n                size=\"sm\" \r\n                responsive \r\n                variant='dark' \r\n                className=\"justify-content-md-center\" \r\n                condensed\r\n                {...getTableProps()}>\r\n                <thead>\r\n                  {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {\r\n                        headerGroup.headers.map((column) => (\r\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                            {column.render('Header')}\r\n                            <div>\r\n                                {column.canFilter ? column.render('Filter') : null}\r\n                            </div>\r\n                            <span>\r\n                                {column.isSorted ? \r\n                                    (column.isSortedDesc ? \r\n                                    <FaSortAmountUp/> : \r\n                                    <FaSortAmountDown/>) : \r\n                                ''}\r\n                            </span>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row) \r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell) =>{\r\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                    })\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n                <tfoot>\r\n                    {\r\n                        footerGroups.map((footerGroup) => (\r\n                            <tr {...footerGroup.getFooterGroupProps()}>\r\n                                {footerGroup.headers.map((column) => (\r\n                                    <td {...column.getFooterGroupProps}>\r\n                                        {\r\n                                            column.render('Footer')\r\n                                        }\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tfoot>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\n","\nimport './App.css';\nimport {FilteringTable} from './components/FilteringTable.jsx'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FilteringTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}